plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'

	id 'idea'
}

group = 'com.woozuda'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

idea {
	module {
		downloadSources = true
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  //jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.3.4'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// QueryDSL 디펜던시 추가 시작
	/*
	디펜던시명 중간에 버전 정보가 오는 경우, 버전 변수를 작성해
	dependency-management 가 버전을 자동으로 잡아주도록 한다.
	 */
	implementation "com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" //java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" //java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
	// QueryDSL 디펜던시 추가 끝

	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}


//QueryDSL 설정부 시작
/*
QueryDSL 은 별다른 설정이 없으면, 자동으로 QClass 를 만들어 build 디렉토리에 저장한다.
그러나 이렇게 자동 설정된 내용을 쓰면 IntelliJ IDEA 를 이용해서 빌드할 때 문제가 생길 수도 있다.
 */
def generated = "src/main/generated"

//querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

//java sourceSets 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

//'gradle clean' 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
//QueryDSL 설정부 끝
